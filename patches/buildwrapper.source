Index: archhaskell/haskell-buildwrapper/src/buildwrapper-0.7.7/buildwrapper.cabal
===================================================================
--- archhaskell.orig/haskell-buildwrapper/src/buildwrapper-0.7.7/buildwrapper.cabal
+++ archhaskell/haskell-buildwrapper/src/buildwrapper-0.7.7/buildwrapper.cabal
@@ -35,11 +35,11 @@ library
                    haskell-src-exts >= 1.12 && <1.15,
                    cpphs,
                    old-time,
-                   aeson >=0.4,
+                   aeson >=0.7 && <0.8,
                    unordered-containers,
                    utf8-string,
                    bytestring,
-                   attoparsec,
+                   attoparsec>=0.11 && <0.12,
                    transformers,
                    deepseq
   ghc-options:     -Wall -fno-warn-unused-do-bind
Index: archhaskell/haskell-buildwrapper/src/buildwrapper-0.7.7/src/Language/Haskell/BuildWrapper/GHCStorage.hs
===================================================================
--- archhaskell.orig/haskell-buildwrapper/src/buildwrapper-0.7.7/src/Language/Haskell/BuildWrapper/GHCStorage.hs
+++ archhaskell/haskell-buildwrapper/src/buildwrapper-0.7.7/src/Language/Haskell/BuildWrapper/GHCStorage.hs
@@ -539,8 +539,8 @@ extractSourceSpan _ =Nothing
 -- | extract the source location from JSON
 extractSourceLoc :: Value -> Maybe (Int,Int)
 extractSourceLoc (Object m) | 
-        Just (Number(I l))<-HM.lookup "line" m,
-        Just (Number(I c))<-HM.lookup "column" m=Just (fromIntegral l,fromIntegral c)  
+        Just (Number l)<-HM.lookup "line" m,
+        Just (Number c)<-HM.lookup "column" m=Just (round l,round c)  
 extractSourceLoc _ = Nothing       
 
 -- | resolve the ident in an expression
